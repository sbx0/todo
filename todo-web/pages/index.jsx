import {useEffect, useState} from "react";
import styles from '../styles/Home.module.css'
import TaskInput from "../components/task/TaskInput";
import TaskItem from "../components/task/TaskItem";

import {listApi, saveApi, updateApi} from "../apis/taskApi";
import Head from 'next/head'
import TaskCategory from "../components/task/TaskCategory";

export default function Home() {
  const [list, setList] = useState([]);
  const [newTask, setNewTask] = useState('');
  const [categoryId, setCategoryId] = useState(null);

  useEffect(() => {
    listApi({page: 1, pageSize: 20, categoryId: categoryId}, false).then(
        (res) => {
          setList(res.data)
        })
  }, [categoryId]);

  const saveNewTask = () => {
    let taskName = newTask;
    setNewTask('');
    if (taskName == null) {
      return;
    }
    if (taskName === '') {
      return;
    }
    if (taskName.trim() === '') {
      return;
    }
    saveApi({
      taskName: taskName,
      categoryId: categoryId
    }).then(() => {
      listApi({page: 1, pageSize: 20, categoryId: categoryId}).then(
          r => setList(r.data));
    })
  }

  const setTaskStatusCompleted = (task) => {
    updateApi({
      ...task,
      taskStatus: 1
    }).then(() => {
      listApi({page: 1, pageSize: 20, categoryId: categoryId}).then(
          r => setList(r.data)
      );
    })
  }

  const setTaskStatusUndo = (task) => {
    updateApi({
      ...task,
      taskStatus: 0
    }).then(() => {
      listApi({page: 1, pageSize: 20, categoryId: categoryId}).then(
          r => setList(r.data));
    })
  }

  return (
      <div className={styles.container}>
        <Head>
          <title>Next Todo App</title>
          <meta name="description" content="Generated by create next app"/>
          <link rel="icon" href="/favicon.ico"/>
        </Head>

        <main className={styles.main}>
          <div className={styles.operationArea}>
            <TaskInput newTask={newTask}
                       setNewTask={setNewTask}
                       saveNewTask={saveNewTask}/>
          </div>
          <div className={styles.contentArea}>
            <TaskCategory categoryId={categoryId}
                          setCategoryId={setCategoryId}/>
            {list.map((one) =>
                <TaskItem key={'taskInfo_' + one.id}
                          one={one}
                          setTaskStatusUndo={setTaskStatusUndo}
                          setTaskStatusCompleted={setTaskStatusCompleted}/>)}
          </div>
        </main>
      </div>
  )
}
